import streamlit as st
import requests

# Function to fetch exchange rate from a global API
def get_exchange_rate():
    url = "https://api.exchangerate-api.com/v4/latest/USD"  # Global exchange rate API
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        if "IQD" in data["rates"]:
            return data["rates"]["IQD"]
        else:
            st.error("Ù†Ø±Ø®ÛŒ IQD Ù„Ù‡ ÙˆÛ•ÚµØ§Ù…Û•ÙˆÛ• Ù†Û•Ø¯Û†Ø²Ø±Ø§ÛŒÛ•ÙˆÛ•.")
            return None
    except Exception as e:
        st.error(f"Ù‡Û•ÚµÛ•ÛŒÛ•Ú© Ø±ÙˆÙˆÛŒØ¯Ø§ Ù„Û• Ú©ÛŽØ´Ø§Ù†ÛŒ Ù†Ø±Ø®Û•Ú©Ø§Ù†: {e}")
        return None

# Streamlit app
st.set_page_config(page_title="Ú¯Û†Ú•ÛŒÙ†ÛŒ Ø¯Ø±Ø§ÙˆÛ•", page_icon="ðŸ’±", layout="centered")

# Add custom CSS for background color
st.markdown(
    """
    <style>
    body {
        background: linear-gradient(to bottom, #1e3c72, #2a5298);
        color: white;
    }
    .stButton>button {
        background-color: #4CAF50;
        color: white;
    }
    </style>
    """,
    unsafe_allow_html=True
)

st.title("ðŸ’± Ú¯Û†Ú•ÛŒÙ†ÛŒ Ø¯Ø±Ø§ÙˆÛ•: USD â†” IQD")
st.markdown("Ø¦Û•Ù… Ø¨Û•Ø±Ù†Ø§Ù…Û•ÛŒÛ• Ø¨Û•Ú©Ø§Ø±Ø¨Û•Ø±Û• Ø¨Û† Ø¨Û• Ø¦Ø§Ø³Ø§Ù†ØªØ±ÛŒÙ† Ø´ÛŽÙˆÛ• Ú¯Û†Ú•ÛŒÙ†ÛŒ Ù†ÛŽÙˆØ§Ù† **USD** Ùˆ **IQD** Ø¨Û• Ù¾Û•ÛŒÙˆÛ•Ù†Ø¯ÛŒ Ø¨Û• Ù†Ø±Ø®Û• Ù†ÙˆÛŽÛŒÛ•Ú©Ø§Ù†.")

# Fetch the exchange rate
usd_to_iqd_rate = get_exchange_rate()

if usd_to_iqd_rate:
    st.markdown(f"### ðŸ“ˆ Ù†Ø±Ø®Û•Ú©Ø§Ù†ÛŒ Ù†ÙˆÛŽ: **1 USD = {usd_to_iqd_rate} IQD**")

    # Add some spacing
    st.markdown("---")

    # Input fields for conversion with improved layout
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("Ú¯Û†Ú•ÛŒÙ†ÛŒ USD Ø¨Û† IQD")
        usd_amount = st.number_input("Ø¨Ú•ÛŒ USD Ø¨Ù†ÙˆÙˆØ³Û•:", min_value=0.0, value=0.0, step=1.0, format="%.2f")
        if st.button("Ú¯Û†Ú•ÛŒÙ†ÛŒ Ø¨Û† IQD"):
            iqd_result = usd_amount * usd_to_iqd_rate
            st.success(f"{usd_amount:.2f} USD = {iqd_result:.2f} IQD")

    with col2:
        st.subheader("Ú¯Û†Ú•ÛŒÙ†ÛŒ IQD Ø¨Û† USD")
        iqd_amount = st.number_input("Ø¨Ú•ÛŒ IQD Ø¨Ù†ÙˆÙˆØ³Û•:", min_value=0.0, value=0.0, step=1.0, format="%.2f")
        if st.button("Ú¯Û†Ú•ÛŒÙ†ÛŒ Ø¨Û† USD"):
            usd_result = iqd_amount / usd_to_iqd_rate
            st.success(f"{iqd_amount:.2f} IQD = {usd_result:.2f} USD")

    # Footer section
    st.markdown("---")
    st.markdown(
        "**Ù¾ÛŽØ´Ù†ÛŒØ§Ø±:** Ù†Ø±Ø®Û•Ú©Ø§Ù† Ø¨Û• Ø´ÛŽÙˆÛ•ÛŒ Ø®Û†Ú©Ø§Ø± Ù†ÙˆÛŽ Ø¯Û•Ú©Ø±ÛŽÙ†Û•ÙˆÛ• Ø¨Û• Ù¾Û•ÛŒÙˆÛ•Ù†Ø¯ÛŒ Ø¨Û• Ø¯Ø§ØªØ§ÛŒ Ù†ÙˆÛŽÛŒÛ•Ú©Ø§Ù† Ù„Û• API-ÛŒÛ•Ú©ÛŒ Ø¨Û• Ø¨Ú•ÙˆØ§. Ø¨Û† Ú¯Û†Ú•ÛŒÙ†ÛŒ Ú•Ø§Ø³ØªÛ•Ù‚ÛŒÙ†Û•ØŒ Ø¯ÚµÙ†ÛŒØ§Ø¨Û• Ù„Û•ÙˆÛ•ÛŒ Ø¨Ú•Û•Ú©Ø§Ù†Øª Ú•Ø§Ø³ØªÙ†.")

else:
    st.error("Ù†Û•ØªÙˆØ§Ù†Ø±Ø§ Ù†Ø±Ø®Û•Ú©Ø§Ù† Ø¨Û•Ø¯Û•Ø³ØªÙ‡ÛŽÙ†Ù†. ØªÚ©Ø§ÛŒÛ• Ø¯ÙˆÙˆØ¨Ø§Ø±Û• Ù‡Û•ÙˆÚµ Ø¨Ø¯Û•.")
